openapi: 3.0.3
info:
  title: User API
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        description: User to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update user by ID
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      requestBody:
        description: Updated user data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "user-1001"
        username:
          type: string
          example: "user-test"
        email:
          type: string
          format: email
          example: "user@test.com"
        fullName:
          type: string
          example: "User Test"
        createdAt:
          type: string
          format: date-time
          example: "2025-06-28T10:00:00Z"
    UserCreateRequest:
      type: object
      required:
        - username
        - email
        - fullName
      properties:
        username:
          type: string
          example: "user-test"
        email:
          type: string
          format: email
          example: "user@test.com"
        fullName:
          type: string
          example: "User Test"
    UserUpdateRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "user@test.com"
        fullName:
          type: string
          example: "User Test"
